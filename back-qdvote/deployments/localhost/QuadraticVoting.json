{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        }
      ],
      "name": "ItemCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "positive",
          "type": "bool"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "currWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        }
      ],
      "name": "calcCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "title",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "createItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPositive",
          "type": "bool"
        }
      ],
      "name": "currentWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "itemCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "items",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "title",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "totalPositiveWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalNegativeWeight",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        }
      ],
      "name": "negativeVote",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        }
      ],
      "name": "positiveVote",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x10f1b870130013aacb3ae4eece357d44b35cebc253e7f421caa2ac6bb723a64e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1191576",
    "logsBloom": "0x
    "blockHash": "0x636ef4aeba6e4b4ca5f3a535d06793c468e2ddc08cb2d9cc8c398377fedc7e5d",
    "transactionHash": "0x10f1b870130013aacb3ae4eece357d44b35cebc253e7f421caa2ac6bb723a64e",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1191576",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d60e3124fa309f78943d869c4323c598",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"ItemCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"positive\",\"type\":\"bool\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"calcCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"title\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"createItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPositive\",\"type\":\"bool\"}],\"name\":\"currentWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"itemCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"title\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalPositiveWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNegativeWeight\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"negativeVote\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"positiveVote\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/QuadraticVoting.sol\":\"QuadraticVoting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/QuadraticVoting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.4.0 <0.9.0;\\n\\n//test\\ncontract QuadraticVoting {\\n    struct Item {\\n        address payable owner;\\n        uint256 amount;\\n        bytes32 title;\\n        // string imageHash; // IPFS cid\\n        string description;\\n        mapping(address => uint256) positiveVotes; // user => weight\\n        mapping(address => uint256) negativeVotes; // user => weight\\n        uint256 totalPositiveWeight;\\n        uint256 totalNegativeWeight;\\n    }\\n    uint256 public constant voteCost = 10_000_000_000; // wei\\n\\n    mapping(uint256 => Item) public items; // itemId => id\\n    uint256 public itemCount = 0; // also next itemId\\n\\n    event ItemCreated(uint256 itemId);\\n    event Voted(uint256 itemId, uint256 weight, bool positive);\\n\\n    function currentWeight(\\n        uint256 itemId,\\n        address addr,\\n        bool isPositive\\n    ) public view returns (uint256) {\\n        if (isPositive) {\\n            return items[itemId].positiveVotes[addr];\\n        } else {\\n            return items[itemId].negativeVotes[addr];\\n        }\\n    }\\n\\n    function calcCost(uint256 currWeight, uint256 weight)\\n        public\\n        pure\\n        returns (uint256)\\n    {\\n        if (currWeight > weight) {\\n            return weight * weight * voteCost; // cost is always quadratic\\n        } else if (currWeight < weight) {\\n            // this allows users to save on costs if they are increasing their vote\\n            // example: current weight is 3, they want to change it to 5\\n            // this would cost 16x (5 * 5 - 3 * 3) instead of 25x the vote cost\\n            return (weight * weight - currWeight * currWeight) * voteCost;\\n        } else {\\n            return 0;\\n        }\\n    }\\n\\n    function createItem(\\n        bytes32 title,\\n        //string memory imageHash,\\n        string memory description\\n    ) public {\\n        uint256 itemId = itemCount++;\\n        Item storage item = items[itemId];\\n        item.owner = payable(msg.sender);\\n        item.title = title;\\n        //item.imageHash = imageHash;\\n        item.description = description;\\n        emit ItemCreated(itemId);\\n    }\\n\\n    function positiveVote(uint256 itemId, uint256 weight) public payable {\\n        Item storage item = items[itemId];\\n        require(msg.sender != item.owner); // owners cannot vote on their own items\\n\\n        uint256 currWeight = item.positiveVotes[msg.sender];\\n        if (currWeight == weight) {\\n            return; // no need to process further if vote has not changed\\n        }\\n\\n        uint256 cost = calcCost(currWeight, weight);\\n        require(msg.value >= cost); // msg.value must be enough to cover the cost\\n\\n        item.positiveVotes[msg.sender] = weight;\\n        item.totalPositiveWeight += weight - currWeight;\\n\\n        // weight cannot be both positive and negative simultaneously\\n        item.totalNegativeWeight -= item.negativeVotes[msg.sender];\\n        item.negativeVotes[msg.sender] = 0;\\n\\n        item.amount += msg.value; // reward creator of item for their contribution\\n\\n        emit Voted(itemId, weight, true);\\n    }\\n\\n    function negativeVote(uint256 itemId, uint256 weight) public payable {\\n        Item storage item = items[itemId];\\n        require(msg.sender != item.owner);\\n\\n        uint256 currWeight = item.negativeVotes[msg.sender];\\n        if (currWeight == weight) {\\n            return; // no need to process further if vote has not changed\\n        }\\n\\n        uint256 cost = calcCost(currWeight, weight);\\n        require(msg.value >= cost); // msg.value must be enough to cover the cost\\n\\n        item.negativeVotes[msg.sender] = weight;\\n        item.totalNegativeWeight += weight - currWeight;\\n\\n        // weight cannot be both positive and negative simultaneously\\n        item.totalPositiveWeight -= item.positiveVotes[msg.sender];\\n        item.positiveVotes[msg.sender] = 0;\\n\\n        // distribute voting cost to every item except for this one\\n        uint256 reward = msg.value / (itemCount - 1);\\n        for (uint256 i = 0; i < itemCount; i++) {\\n            if (i != itemId) items[i].amount += reward;\\n        }\\n\\n        emit Voted(itemId, weight, false);\\n    }\\n\\n    function claim(uint256 itemId) public {\\n        Item storage item = items[itemId];\\n        require(msg.sender == item.owner);\\n        item.owner.transfer(item.amount);\\n        item.amount = 0;\\n    }\\n}\\n\",\"keccak256\":\"0x1c080efc27ef521742fc2db73db5d604bb2a4dffdf40e6155b11ab3a28026a52\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600060015534801561001557600080fd5b50611497806100256000396000f3fe6080604052600436106100865760003560e01c80636bfb0d01116100595780636bfb0d0114610117578063a5a13ddc14610142578063b062fe4f1461017f578063bfb231d2146101a8578063d7921a5b146101ea57610086565b8063379607f51461008b5780634c1b8ffd146100b4578063602ecffe146100df5780636984ef2a146100fb575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b4d565b610227565b005b3480156100c057600080fd5b506100c9610316565b6040516100d69190610b89565b60405180910390f35b6100f960048036038101906100f49190610ba4565b61031f565b005b61011560048036038101906101109190610ba4565b61056e565b005b34801561012357600080fd5b5061012c610815565b6040516101399190610b89565b60405180910390f35b34801561014e57600080fd5b5061016960048036038101906101649190610ba4565b61081b565b6040516101769190610b89565b60405180910390f35b34801561018b57600080fd5b506101a660048036038101906101a19190610d60565b610894565b005b3480156101b457600080fd5b506101cf60048036038101906101ca9190610b4d565b610960565b6040516101e196959493929190610e8b565b60405180910390f35b3480156101f657600080fd5b50610211600480360381019061020c9190610f69565b610a44565b60405161021e9190610b89565b60405180910390f35b600080600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029957600080fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600101549081150290604051600060405180830381858888f19350505050158015610307573d6000803e3d6000fd5b50600081600101819055505050565b6402540be40081565b600080600084815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361039157600080fd5b60008160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281036103e557505061056a565b60006103f1828561081b565b90508034101561040057600080fd5b838360040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081846104529190610feb565b836006016000828254610465919061101f565b925050819055508260050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548360070160008282546104c19190610feb565b9250508190555060008360050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555034836001016000828254610523919061101f565b925050819055507f67b60bc862e9c013a238015361df4bb95a4abfe78309ba4a4d7a04d2fe29e4328585600160405161055e93929190611062565b60405180910390a15050505b5050565b600080600084815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036105e057600080fd5b60008160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828103610634575050610811565b6000610640828561081b565b90508034101561064f57600080fd5b838360050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081846106a19190610feb565b8360070160008282546106b4919061101f565b925050819055508260040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548360060160008282546107109190610feb565b9250508190555060008360040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006001805461076e9190610feb565b3461077991906110c8565b905060005b6001548110156107cf578681146107bc578160008083815260200190815260200160002060010160008282546107b4919061101f565b925050819055505b80806107c7906110f9565b91505061077e565b507f67b60bc862e9c013a238015361df4bb95a4abfe78309ba4a4d7a04d2fe29e4328686600060405161080493929190611062565b60405180910390a1505050505b5050565b60015481565b600081831115610848576402540be40082836108379190611141565b6108419190611141565b905061088e565b81831015610889576402540be40083846108629190611141565b838461086e9190611141565b6108789190610feb565b6108829190611141565b905061088e565b600090505b92915050565b6000600160008154809291906108a9906110f9565b91905055905060008060008381526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083816002018190555082816003019081610922919061138f565b507fa26a7a3d8c7ebb9fc47c7fdfd8af05a15da0ff8d51b883930669ed3ee87f09de826040516109529190610b89565b60405180910390a150505050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030180546109b5906111b2565b80601f01602080910402602001604051908101604052809291908181526020018280546109e1906111b2565b8015610a2e5780601f10610a0357610100808354040283529160200191610a2e565b820191906000526020600020905b815481529060010190602001808311610a1157829003601f168201915b5050505050908060060154908060070154905086565b60008115610aa65760008085815260200190815260200160002060040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610afc565b60008085815260200190815260200160002060050160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b9392505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610b2a81610b17565b8114610b3557600080fd5b50565b600081359050610b4781610b21565b92915050565b600060208284031215610b6357610b62610b0d565b5b6000610b7184828501610b38565b91505092915050565b610b8381610b17565b82525050565b6000602082019050610b9e6000830184610b7a565b92915050565b60008060408385031215610bbb57610bba610b0d565b5b6000610bc985828601610b38565b9250506020610bda85828601610b38565b9150509250929050565b6000819050919050565b610bf781610be4565b8114610c0257600080fd5b50565b600081359050610c1481610bee565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c6d82610c24565b810181811067ffffffffffffffff82111715610c8c57610c8b610c35565b5b80604052505050565b6000610c9f610b03565b9050610cab8282610c64565b919050565b600067ffffffffffffffff821115610ccb57610cca610c35565b5b610cd482610c24565b9050602081019050919050565b82818337600083830152505050565b6000610d03610cfe84610cb0565b610c95565b905082815260208101848484011115610d1f57610d1e610c1f565b5b610d2a848285610ce1565b509392505050565b600082601f830112610d4757610d46610c1a565b5b8135610d57848260208601610cf0565b91505092915050565b60008060408385031215610d7757610d76610b0d565b5b6000610d8585828601610c05565b925050602083013567ffffffffffffffff811115610da657610da5610b12565b5b610db285828601610d32565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610de782610dbc565b9050919050565b610df781610ddc565b82525050565b610e0681610be4565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e46578082015181840152602081019050610e2b565b60008484015250505050565b6000610e5d82610e0c565b610e678185610e17565b9350610e77818560208601610e28565b610e8081610c24565b840191505092915050565b600060c082019050610ea06000830189610dee565b610ead6020830188610b7a565b610eba6040830187610dfd565b8181036060830152610ecc8186610e52565b9050610edb6080830185610b7a565b610ee860a0830184610b7a565b979650505050505050565b6000610efe82610dbc565b9050919050565b610f0e81610ef3565b8114610f1957600080fd5b50565b600081359050610f2b81610f05565b92915050565b60008115159050919050565b610f4681610f31565b8114610f5157600080fd5b50565b600081359050610f6381610f3d565b92915050565b600080600060608486031215610f8257610f81610b0d565b5b6000610f9086828701610b38565b9350506020610fa186828701610f1c565b9250506040610fb286828701610f54565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ff682610b17565b915061100183610b17565b925082820390508181111561101957611018610fbc565b5b92915050565b600061102a82610b17565b915061103583610b17565b925082820190508082111561104d5761104c610fbc565b5b92915050565b61105c81610f31565b82525050565b60006060820190506110776000830186610b7a565b6110846020830185610b7a565b6110916040830184611053565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110d382610b17565b91506110de83610b17565b9250826110ee576110ed611099565b5b828204905092915050565b600061110482610b17565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361113657611135610fbc565b5b600182019050919050565b600061114c82610b17565b915061115783610b17565b925082820261116581610b17565b9150828204841483151761117c5761117b610fbc565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111ca57607f821691505b6020821081036111dd576111dc611183565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026112457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611208565b61124f8683611208565b95508019841693508086168417925050509392505050565b6000819050919050565b600061128c61128761128284610b17565b611267565b610b17565b9050919050565b6000819050919050565b6112a683611271565b6112ba6112b282611293565b848454611215565b825550505050565b600090565b6112cf6112c2565b6112da81848461129d565b505050565b5b818110156112fe576112f36000826112c7565b6001810190506112e0565b5050565b601f82111561134357611314816111e3565b61131d846111f8565b8101602085101561132c578190505b611340611338856111f8565b8301826112df565b50505b505050565b600082821c905092915050565b600061136660001984600802611348565b1980831691505092915050565b600061137f8383611355565b9150826002028217905092915050565b61139882610e0c565b67ffffffffffffffff8111156113b1576113b0610c35565b5b6113bb82546111b2565b6113c6828285611302565b600060209050601f8311600181146113f957600084156113e7578287015190505b6113f18582611373565b865550611459565b601f198416611407866111e3565b60005b8281101561142f5784890151825560018201915060208501945060208101905061140a565b8683101561144c5784890151611448601f891682611355565b8355505b6001600288020188555050505b50505050505056fea264697066735822122051b127051689ee25b443b7433e3ceab90ce880af4eeda019b17440b0572d9c9564736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80636bfb0d01116100595780636bfb0d0114610117578063a5a13ddc14610142578063b062fe4f1461017f578063bfb231d2146101a8578063d7921a5b146101ea57610086565b8063379607f51461008b5780634c1b8ffd146100b4578063602ecffe146100df5780636984ef2a146100fb575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b4d565b610227565b005b3480156100c057600080fd5b506100c9610316565b6040516100d69190610b89565b60405180910390f35b6100f960048036038101906100f49190610ba4565b61031f565b005b61011560048036038101906101109190610ba4565b61056e565b005b34801561012357600080fd5b5061012c610815565b6040516101399190610b89565b60405180910390f35b34801561014e57600080fd5b5061016960048036038101906101649190610ba4565b61081b565b6040516101769190610b89565b60405180910390f35b34801561018b57600080fd5b506101a660048036038101906101a19190610d60565b610894565b005b3480156101b457600080fd5b506101cf60048036038101906101ca9190610b4d565b610960565b6040516101e196959493929190610e8b565b60405180910390f35b3480156101f657600080fd5b50610211600480360381019061020c9190610f69565b610a44565b60405161021e9190610b89565b60405180910390f35b600080600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029957600080fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600101549081150290604051600060405180830381858888f19350505050158015610307573d6000803e3d6000fd5b50600081600101819055505050565b6402540be40081565b600080600084815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361039157600080fd5b60008160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281036103e557505061056a565b60006103f1828561081b565b90508034101561040057600080fd5b838360040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081846104529190610feb565b836006016000828254610465919061101f565b925050819055508260050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548360070160008282546104c19190610feb565b9250508190555060008360050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555034836001016000828254610523919061101f565b925050819055507f67b60bc862e9c013a238015361df4bb95a4abfe78309ba4a4d7a04d2fe29e4328585600160405161055e93929190611062565b60405180910390a15050505b5050565b600080600084815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036105e057600080fd5b60008160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828103610634575050610811565b6000610640828561081b565b90508034101561064f57600080fd5b838360050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081846106a19190610feb565b8360070160008282546106b4919061101f565b925050819055508260040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548360060160008282546107109190610feb565b9250508190555060008360040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006001805461076e9190610feb565b3461077991906110c8565b905060005b6001548110156107cf578681146107bc578160008083815260200190815260200160002060010160008282546107b4919061101f565b925050819055505b80806107c7906110f9565b91505061077e565b507f67b60bc862e9c013a238015361df4bb95a4abfe78309ba4a4d7a04d2fe29e4328686600060405161080493929190611062565b60405180910390a1505050505b5050565b60015481565b600081831115610848576402540be40082836108379190611141565b6108419190611141565b905061088e565b81831015610889576402540be40083846108629190611141565b838461086e9190611141565b6108789190610feb565b6108829190611141565b905061088e565b600090505b92915050565b6000600160008154809291906108a9906110f9565b91905055905060008060008381526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083816002018190555082816003019081610922919061138f565b507fa26a7a3d8c7ebb9fc47c7fdfd8af05a15da0ff8d51b883930669ed3ee87f09de826040516109529190610b89565b60405180910390a150505050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030180546109b5906111b2565b80601f01602080910402602001604051908101604052809291908181526020018280546109e1906111b2565b8015610a2e5780601f10610a0357610100808354040283529160200191610a2e565b820191906000526020600020905b815481529060010190602001808311610a1157829003601f168201915b5050505050908060060154908060070154905086565b60008115610aa65760008085815260200190815260200160002060040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610afc565b60008085815260200190815260200160002060050160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b9392505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610b2a81610b17565b8114610b3557600080fd5b50565b600081359050610b4781610b21565b92915050565b600060208284031215610b6357610b62610b0d565b5b6000610b7184828501610b38565b91505092915050565b610b8381610b17565b82525050565b6000602082019050610b9e6000830184610b7a565b92915050565b60008060408385031215610bbb57610bba610b0d565b5b6000610bc985828601610b38565b9250506020610bda85828601610b38565b9150509250929050565b6000819050919050565b610bf781610be4565b8114610c0257600080fd5b50565b600081359050610c1481610bee565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c6d82610c24565b810181811067ffffffffffffffff82111715610c8c57610c8b610c35565b5b80604052505050565b6000610c9f610b03565b9050610cab8282610c64565b919050565b600067ffffffffffffffff821115610ccb57610cca610c35565b5b610cd482610c24565b9050602081019050919050565b82818337600083830152505050565b6000610d03610cfe84610cb0565b610c95565b905082815260208101848484011115610d1f57610d1e610c1f565b5b610d2a848285610ce1565b509392505050565b600082601f830112610d4757610d46610c1a565b5b8135610d57848260208601610cf0565b91505092915050565b60008060408385031215610d7757610d76610b0d565b5b6000610d8585828601610c05565b925050602083013567ffffffffffffffff811115610da657610da5610b12565b5b610db285828601610d32565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610de782610dbc565b9050919050565b610df781610ddc565b82525050565b610e0681610be4565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e46578082015181840152602081019050610e2b565b60008484015250505050565b6000610e5d82610e0c565b610e678185610e17565b9350610e77818560208601610e28565b610e8081610c24565b840191505092915050565b600060c082019050610ea06000830189610dee565b610ead6020830188610b7a565b610eba6040830187610dfd565b8181036060830152610ecc8186610e52565b9050610edb6080830185610b7a565b610ee860a0830184610b7a565b979650505050505050565b6000610efe82610dbc565b9050919050565b610f0e81610ef3565b8114610f1957600080fd5b50565b600081359050610f2b81610f05565b92915050565b60008115159050919050565b610f4681610f31565b8114610f5157600080fd5b50565b600081359050610f6381610f3d565b92915050565b600080600060608486031215610f8257610f81610b0d565b5b6000610f9086828701610b38565b9350506020610fa186828701610f1c565b9250506040610fb286828701610f54565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ff682610b17565b915061100183610b17565b925082820390508181111561101957611018610fbc565b5b92915050565b600061102a82610b17565b915061103583610b17565b925082820190508082111561104d5761104c610fbc565b5b92915050565b61105c81610f31565b82525050565b60006060820190506110776000830186610b7a565b6110846020830185610b7a565b6110916040830184611053565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110d382610b17565b91506110de83610b17565b9250826110ee576110ed611099565b5b828204905092915050565b600061110482610b17565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361113657611135610fbc565b5b600182019050919050565b600061114c82610b17565b915061115783610b17565b925082820261116581610b17565b9150828204841483151761117c5761117b610fbc565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111ca57607f821691505b6020821081036111dd576111dc611183565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026112457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611208565b61124f8683611208565b95508019841693508086168417925050509392505050565b6000819050919050565b600061128c61128761128284610b17565b611267565b610b17565b9050919050565b6000819050919050565b6112a683611271565b6112ba6112b282611293565b848454611215565b825550505050565b600090565b6112cf6112c2565b6112da81848461129d565b505050565b5b818110156112fe576112f36000826112c7565b6001810190506112e0565b5050565b601f82111561134357611314816111e3565b61131d846111f8565b8101602085101561132c578190505b611340611338856111f8565b8301826112df565b50505b505050565b600082821c905092915050565b600061136660001984600802611348565b1980831691505092915050565b600061137f8383611355565b9150826002028217905092915050565b61139882610e0c565b67ffffffffffffffff8111156113b1576113b0610c35565b5b6113bb82546111b2565b6113c6828285611302565b600060209050601f8311600181146113f957600084156113e7578287015190505b6113f18582611373565b865550611459565b601f198416611407866111e3565b60005b8281101561142f5784890151825560018201915060208501945060208101905061140a565b8683101561144c5784890151611448601f891682611355565b8355505b6001600288020188555050505b50505050505056fea264697066735822122051b127051689ee25b443b7433e3ceab90ce880af4eeda019b17440b0572d9c9564736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 30,
        "contract": "contracts/QuadraticVoting.sol:QuadraticVoting",
        "label": "items",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(Item)22_storage)"
      },
      {
        "astId": 33,
        "contract": "contracts/QuadraticVoting.sol:QuadraticVoting",
        "label": "itemCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Item)22_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct QuadraticVoting.Item)",
        "numberOfBytes": "32",
        "value": "t_struct(Item)22_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Item)22_storage": {
        "encoding": "inplace",
        "label": "struct QuadraticVoting.Item",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/QuadraticVoting.sol:QuadraticVoting",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 5,
            "contract": "contracts/QuadraticVoting.sol:QuadraticVoting",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7,
            "contract": "contracts/QuadraticVoting.sol:QuadraticVoting",
            "label": "title",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          },
          {
            "astId": 9,
            "contract": "contracts/QuadraticVoting.sol:QuadraticVoting",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 13,
            "contract": "contracts/QuadraticVoting.sol:QuadraticVoting",
            "label": "positiveVotes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 17,
            "contract": "contracts/QuadraticVoting.sol:QuadraticVoting",
            "label": "negativeVotes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 19,
            "contract": "contracts/QuadraticVoting.sol:QuadraticVoting",
            "label": "totalPositiveWeight",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 21,
            "contract": "contracts/QuadraticVoting.sol:QuadraticVoting",
            "label": "totalNegativeWeight",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}